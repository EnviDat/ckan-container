version: "3"

volumes:
  ckan_storage:
  ckan_translations:
  pg_data:
  solr_data:

networks:
  ckan-staging:

services:
  ckan:
    container_name: ckan
    image: "${INTERNAL_REG}/ckan-container/ckan:${CKAN_VERSION}-main"
    build:
      context: .
      target: prod
      args:
        - EXTERNAL_REG=${EXTERNAL_REG}
        - INTERNAL_REG=${INTERNAL_REG}
        - PYTHON_IMG_TAG=${PYTHON_IMG_TAG}
        - CKAN_VERSION=${CKAN_VERSION}
        - MAINTAINER=${MAINTAINER}
    extra_hosts:
      pgdboapp.wsl.ch: 10.30.1.156
      mail.wsl.ch: 10.30.1.224
    depends_on:
      - db
      - solr
      - redis
    env_file:
      - .env
    environment:
      CKAN_INI: "/opt/ckan/ckan.ini"
    volumes:
      - ckan_storage:/opt/ckan/data
      - ./config/stag-ckan.ini:/opt/ckan/ckan.ini
      - ckan_translations:/usr/lib/ckan/.local/lib/python3.10/site-packages/ckan/public/base/i18n
    networks:
      - ckan-staging
    restart: unless-stopped

  proxy:
    container_name: ckan_proxy
    image: "${INTERNAL_REG}/ckan-container/proxy:${NGINX_IMG_TAG}-main"
    build:
      context: ./nginx
      args:
        - EXTERNAL_REG=${EXTERNAL_REG}
        - NGINX_IMG_TAG=${NGINX_IMG_TAG}
        - MAINTAINER=${MAINTAINER}
        - NGINX_CONFIG_NAME=stag
    depends_on:
      - ckan
    environment:
      - CKAN_HOST=ckan:5000
      - AUTH_COOKIE_NAME=envidat_staging
    volumes:
      - /etc/pki/wsl_ch/wsl.ch.crt:/certs/cert.crt
      - /etc/pki/wsl_ch/wsl.ch.key:/certs/cert.key
    ports:
      - "8081:443"
    networks:
      - ckan-staging
    restart: unless-stopped

  db:
    container_name: ckan_db
    image: "${INTERNAL_REG}/ckan-container/db:${POSTGRES_IMG_TAG}-main"
    build:
      context: ./postgresql
      args:
        - EXTERNAL_REG=${EXTERNAL_REG}
        - POSTGRES_IMG_TAG=${POSTGRES_IMG_TAG}
        - MAINTAINER=${MAINTAINER}
    environment:
      - POSTGRES_PASSWORD=ai4ncF6GpHokPaNmW25UftzMjM7hrC
      - PGDATA=/var/lib/postgresql/data/db
    env_file:
      - .db.env
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - ckan-staging
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
    restart: unless-stopped

  solr:
    container_name: ckan_solr
    image: "${INTERNAL_REG}/ckan-container/solr:${SOLR_IMG_TAG}-main"
    build:
      context: ./solr
      args:
        - EXTERNAL_REG=${EXTERNAL_REG}
        - SOLR_IMG_TAG=${SOLR_IMG_TAG}
        - MAINTAINER=${MAINTAINER}
    volumes:
      - solr_data:/var/solr/data
    networks:
      - ckan-staging
    restart: unless-stopped

  init-solr:
    container_name: ckan_init_solr
    image: "${INTERNAL_REG}/ckan-container/init-solr:${SOLR_IMG_TAG}-main"
    build:
      context: ./init_solr
      args:
        - EXTERNAL_REG=${EXTERNAL_REG}
        - MAINTAINER=${MAINTAINER}
    environment:
      SOLR_HOST: http://solr:8983
      SOLR_ADMIN_PASS: 4hAYTQkUD6REA3futeKsvUjvK9wETG
      SOLR_CKAN_PASS: MPnJRcGVGurpJF3kWq2eFNDEr3cXv6
    networks:
      - ckan-staging
    depends_on:
      - solr

  redis:
    container_name: ckan_redis
    image: redis:${REDIS_IMG_TAG}
    networks:
      - ckan-staging
    restart: unless-stopped
