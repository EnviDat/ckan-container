version: "3"

volumes:
  ckan_config:
  ckan_home:
  ckan_storage:
  pg_data:
  solr_data:

secrets:
  ckan_config:
    file: ./${CKAN_CONFIG_FILE:-/dev/null}

networks:
  ckan-internal:
    external: true
  db-inspect:
    external: true

services:
  ckan:
    container_name: ckan
    image: "${INTERNAL_REG}/ckan:${CKAN_VERSION}"
    build:
      context: .
      args:
        - EXTERNAL_REG=${EXTERNAL_REG}
        - PYTHON_VERSION=${PYTHON_VERSION}
        - CKAN_VERSION=${CKAN_VERSION}
        - MAINTAINER=${MAINTAINER}
    depends_on:
      - db
      - solr
      - redis
    ports:
      - "8989:5000"
    env_file:
      - .env
    secrets:
      - ckan_config
    volumes:
      - ckan_config:/etc/ckan
      - ckan_home:/usr/lib/ckan
      - ckan_storage:/var/lib/ckan
    networks:
      - ckan-internal

  db:
    container_name: ckan_db
    image: "${INTERNAL_REG}/ckan-db:latest"
    build:
      context: ./postgresql
      args:
        - EXTERNAL_REG=${EXTERNAL_REG}
        - MAINTAINER=${MAINTAINER}
    env_file:
      - .db.secret
    environment:
      - PGDATA=/var/lib/postgresql/data/db
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./${CKAN_DB_DUMP_FILE:-/dev/null}:/docker-entrypoint-initdb.d/ckan.dump
      - ./${DOI_DB_DUMP_FILE:-/dev/null}:/docker-entrypoint-initdb.d/doi.dump
    networks:
      - ckan-internal
      - db-inspect
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "ckan_default"]

  solr:
    container_name: ckan_solr
    image: "${INTERNAL_REG}/ckan-solr:latest"
    build:
      context: ./solr
      args:
        - EXTERNAL_REG=${EXTERNAL_REG}
        - MAINTAINER=${MAINTAINER}
    volumes:
      - solr_data:/opt/solr/server/solr
    networks:
      - ckan-internal
    ports:
      - 8983:8983

  redis:
    container_name: ckan_redis
    image: redis:6.2
    networks:
      - ckan-internal
