# docker-compose build && docker-compose up -d
# If "docker-compose logs ckan" shows DB not ready, run "docker-compose restart ckan" a few times.
version: '3'

volumes:
  ckan_config:
  ckan_home:
  ckan_storage:
  pg_data:
  solr_data:

secrets:
  db_secret:
    file: ./${CKAN_DB_SECRET_FILE:-/dev/null}
  smtp_secret:
    file: ./${CKAN_SMTP_SECRET_FILE:-/dev/null}
  ckan_config:
    file: ./${CKAN_CONFIG_FILE:-/dev/null}

networks:
  ckan-internal:
    external: true
  db-inspect:
    external: true

services:
  ckan:
    container_name: ckan
    image: 'reg.dev.localhost/ckan:${CKAN_VERSION}'
    build:
      context: .
      args:
        - CKAN_VERSION=${CKAN_VERSION}
    depends_on:
      - db
    ports:
      - '8989:5000'
    env_file:
      - .env
    secrets:
      - db_secret
      - smtp_secret
      - ckan_config
    volumes:
      - ckan_config:/etc/ckan
      - ckan_home:/usr/lib/ckan
      - ckan_storage:/var/lib/ckan
    networks:
      - ckan-internal

  db:
    container_name: ckan_db
    image: 'reg.dev.localhost/ckan-db:latest'
    build: ./postgresql
    env_file:
      - .db.secret
    environment:
      - PGDATA=/var/lib/postgresql/data/db
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./${CKAN_DB_DUMP_FILE:-/dev/null}:/docker-entrypoint-initdb.d/ckan.dump
      - ./${DOI_DB_DUMP_FILE:-/dev/null}:/docker-entrypoint-initdb.d/doi.dump
    networks:
      - ckan-internal
      - db-inspect
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'ckan_default']

  solr:
    container_name: ckan_solr
    image: 'reg.dev.localhost/ckan-solr:latest'
    build: ./solr
    volumes:
      - solr_data:/opt/solr/server/solr
    networks:
      - ckan-internal
    ports:
      - 8983:8983

  redis:
    container_name: ckan_redis
    image: redis:6.2
    networks:
      - ckan-internal
