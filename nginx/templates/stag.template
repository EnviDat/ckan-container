server {

    listen 80 default_server;
    server_name _;

    location / {
        return 301 https://$host$request_uri;
    }
}


server {
    listen 443 ssl default_server;

    ssl_certificate     /certs/cert.crt;
    ssl_certificate_key /certs/cert.key;

    client_max_body_size 10G;
    rewrite ^/(.*)/$ /$1 permanent;

    # Response headers
    add_header 'Content-Security-Policy' $upgrade_policy;
    add_header 'Access-Control-Allow-Credentials' 'true';
    # For opentelemetry
    add_header 'Access-Control-Allow-Headers' 'traceparent,tracestate';

    location / {
        proxy_read_timeout 40s;
        proxy_connect_timeout 20s;
        proxy_pass http://${CKAN_HOST};

        # Requests headers
        proxy_set_header Host                $http_host;
        proxy_set_header X-Real-IP           $remote_addr;
        proxy_set_header X-Forwarded-Proto   $scheme;
        proxy_set_header X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host    $http_host;
        proxy_set_header X-Forwarded-Server  $http_host;
        proxy_set_header X-Forwarded-Port    $server_port;

        # Add cookie content to Authorization request header, if not exists
        set $auth_token "";
        if ($http_authorization = "") {
            set $auth_token $cookie_${AUTH_COOKIE_NAME};
        }
        proxy_set_header 'Authorization' $auth_token;

        # Strip out ckan cookie (not required)
        proxy_set_header Cookie "ckan=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;";

        # In emergency comment out line to force caching
        #proxy_ignore_headers X-Accel-Expires Expires Cache-Control;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
