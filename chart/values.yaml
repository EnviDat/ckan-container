# Default values for chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: registry.envidat.ch/envidat/ckan
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets:
  - name: harbor-reg-creds
nameOverride: ""
fullnameOverride: ""

configIniSecret: ckan-config-ini

extraEnv: []

extraEnvFrom:
  - secretRef:
      name: solr-ckan-creds

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 5000

ingress:
  enabled: true
  className: ""
  annotations:
    kubernetes.io/ingress.class: "traefik"
    traefik.ingress.kubernetes.io/router.tls: "true"
  hosts:
    - host: ckan.envidat.ch
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
   - secretName: envidat-star
     hosts:
       - ckan.envidat.ch

resources:
  limits:
    cpu: 2000m
    memory: 2Gi
  requests:
    cpu: 500m
    memory: 500Mi

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 6
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

### bitnami/postgresql chart
db:
  enabled: true
  auth:
    username: dbenvidat
    database: envidat
    ## Must contain keys postgres-password and password
    existingSecret: db-ckan-creds
  image:
    debug: true

  primary:
    extraEnvVars:
      - name: DB_CKAN_NAME
        value: envidat
      - name: DB_DOI_NAME
        value: envidat_doi
    extraEnvVarsSecret: db-ckan-backup-creds
    pgHbaConfiguration: |
      local all all trust
      host all all 127.0.0.1/32 trust
      host all all ::1/128 trust
      local replication all trust
      host replication all 127.0.0.1/32 trust
      host replication all ::1/128 trust
      host all all all md5
    initdb:
      scripts:
        05_init_db.sh: |
          #!/bin/bash
          set -e

          psql -v ON_ERROR_STOP=1 --username postgres --dbname "$POSTGRES_DB" <<-EOSQL
            DROP DATABASE IF EXISTS "$DB_DOI_NAME" WITH (FORCE);
            CREATE DATABASE $DB_DOI_NAME WITH OWNER=$POSTGRES_USER;
          EOSQL
        20_restore_db.sh: |
          #!/bin/bash
          set -e

          echo "Backup and restoring $DB_CKAN_NAME via pipe to new host."
          PGPASSWORD="$DB_PASS" pg_dump --verbose --format c \
              --host "$DB_HOST" --username "$DB_USER" "$DB_CKAN_NAME" \
              | pg_restore --verbose --create --clean --exit-on-error \
              --username postgres --dbname postgres

          echo "Backup and restoring $DB_DOI_NAME via pipe to new host."
          PGPASSWORD="$DB_PASS" pg_dump --verbose --format c \
              --host "$DB_HOST" --username "$DB_USER" "$DB_DOI_NAME" \
              | pg_restore --verbose --create --clean --exit-on-error \
              --username postgres --dbname postgres
        30_add_postgis.sh: |
          #!/bin/bash
          set -e

          psql -v ON_ERROR_STOP=1 --username postgres --dbname "$POSTGRES_DB" <<-EOSQL
            CREATE EXTENSION IF NOT EXISTS postgis;
            CREATE EXTENSION IF NOT EXISTS postgis_topology;
            CREATE EXTENSION IF NOT EXISTS fuzzystrmatch;
            CREATE EXTENSION IF NOT EXISTS postgis_tiger_geocoder;
            ALTER VIEW geometry_columns OWNER TO "$POSTGRES_USER";
            ALTER TABLE spatial_ref_sys OWNER TO "$POSTGRES_USER";
          EOSQL
    resources:
      limits:
        cpu: 2000m
        memory: 2000Mi
      requests:
        cpu: 500m
        memory: 500Mi

# bitnami/solr chart
solr:
  enabled: true
  replicaCount: 1
  image:
    registry: registry.envidat.ch
    repository: envidat/ckan-solr
    tag: 6.6.5-main
  command: ""
  containerSecurityContext:
    runAsUser: 8983
  auth:
    enabled: true
    adminUsername: solr
    adminPassword: "SolrRocks"
  ingress:
    enabled: true
    ingressClassName: ""
    annotations:
      kubernetes.io/ingress.class: "traefik"
      traefik.ingress.kubernetes.io/router.tls: "true"
    hostname: solr.envidat.ch
    tls: true
  readinessProbe:
    enabled: false
  livenessProbe:
    enabled: false
  zookeeper:
    enabled: false
  resources:
    limits:
      cpu: 2000m
      memory: 2000Mi
    requests:
      cpu: 500m
      memory: 500Mi
  passwordInit:
    image: registry.envidat.ch/envidat/ckan-init-solr:6.6.5-main
    credentialsSecret: solr-ckan-creds
