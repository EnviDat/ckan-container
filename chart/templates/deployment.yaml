apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}
  labels:
    {{- include "chart.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "chart.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      hostAliases:
        {{- toYaml .Values.hostAliases | nindent 8 }}
      initContainers:
        - name: copy-ckan-group-img
          image: docker.io/rclone/rclone
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 33
          volumeMounts:
          - name: rclone-config
            mountPath: /config/rclone/rclone.conf
            subPath: rclone.conf
          - name: ckan-group-imgs
            mountPath: {{ .Values.s3GroupImgs.mountPath }}
          command:
            - sh
            - -c
            - >
              rclone --verbose sync
              minio:{{ .Values.s3GroupImgs.bucketName }}
              {{ .Values.s3GroupImgs.mountPath }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          {{- if .Values.probes.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /dataset/
              port: http
            failureThreshold: 1
            periodSeconds: 120
            initialDelaySeconds: 60
            timeoutSeconds: 10
          {{- end }}
          {{- if .Values.probes.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /api/3/action/status_show
              port: http
            failureThreshold: 30
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds:  10
          {{- end }}
          {{- if .Values.probes.startupProbe.enabled }}
          startupProbe:
            httpGet:
              path: /api/3/action/status_show
              port: http
            failureThreshold: 30
            periodSeconds: 10
            initialDelaySeconds: 20
            timeoutSeconds: 10
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            {{- toYaml .Values.extraEnv | nindent 12 }}
          envFrom:
            {{- toYaml .Values.extraEnvFrom | nindent 12 }}
          volumeMounts:
          - name: ckan-config
            mountPath: /home/ckan/ckan.ini
            subPath: ckan.ini
            readOnly: true
          - name: ckan-group-imgs
            mountPath: {{ .Values.s3GroupImgs.mountPath }}
      volumes:
      - name: ckan-config
        secret:
          secretName: {{ .Values.configIniSecret }}
      - name: rclone-config
        secret:
          secretName: minio-rclone-config  
      - name: ckan-group-imgs
        emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
